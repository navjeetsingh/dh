{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/components/SignUp/SignUp.component.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignUpContainer, SignUpTitle } from './SignUp.styles.js';\nimport FormInput from '../FormInput/FormInput.component.js';\nimport CustomButton from '../CustomButton/CustomButton.component.js';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signUpForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    label: \"Display Name\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"Password\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"Submit Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/components/SignUp/SignUp.component.js"],"names":["React","useState","connect","SignUpContainer","SignUpTitle","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleChange","event","value","name","target","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignUpContainer, SignUpTitle } from './SignUp.styles.js';\nimport FormInput from '../FormInput/FormInput.component.js';\nimport CustomButton from '../CustomButton/CustomButton.component.js';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({ signUpStart }) => {\n\tconst [userCredentials, setUserCredentials] = useState({\n\t\tdisplayName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tconfirmPassword: '',\n\t});\n\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\n\n\tconst handleChange = (event) => {\n\t\tconst { value, name } = event.target;\n\t\tsetUserCredentials({ ...userCredentials, [name]: value });\n\t};\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (password !== confirmPassword) {\n\t\t\talert('passwords do not match');\n\t\t\treturn;\n\t\t}\n\t\tsignUpStart({ displayName, email, password });\n\t};\n\n\treturn (\n\t\t<SignUpContainer>\n\t\t\t<SignUpTitle>I do not have a account</SignUpTitle>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form className=\"signUpForm\" onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type=\"submit\" value=\"Submit Form\">\n\t\t\t\t\tSign Up\n\t\t\t\t</CustomButton>\n\t\t\t</form>\n\t\t</SignUpContainer>\n\t);\n};\nconst mapDispatchToProps = (dispatch) => ({\n\tsignUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}