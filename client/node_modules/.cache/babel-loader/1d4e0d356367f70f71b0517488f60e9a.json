{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/components/SignIn/SignIn.component.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './SignIn.styles.js';\nimport FormInput from '../FormInput/FormInput.component.js';\nimport CustomButton from '../CustomButton/CustomButton.component.js';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const {\n    email,\n    password\n  } = this.state;\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    label: \"Password\",\n    handleChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"Submit Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/components/SignIn/SignIn.component.js"],"names":["React","useState","connect","SignInContainer","SignInTitle","ButtonsBarContainer","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","props","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tSignInContainer,\n\tSignInTitle,\n\tButtonsBarContainer,\n} from './SignIn.styles.js';\nimport FormInput from '../FormInput/FormInput.component.js';\nimport CustomButton from '../CustomButton/CustomButton.component.js';\nimport {\n\tgoogleSignInStart,\n\temailSignInStart,\n} from '../../redux/user/user.actions';\n\nconst SignIn = () => {\n\tconst [userCredentials, setCredentials] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\tconst handleChange = (event) => {\n\t\tconst { value, name } = event.target;\n\t\tthis.setState({ [name]: value });\n\t};\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst { emailSignInStart } = this.props;\n\t\tconst { email, password } = this.state;\n\t\temailSignInStart(email, password);\n\t};\n\n\tconst { email, password } = this.state;\n\tconst { googleSignInStart } = this.props;\n\treturn (\n\t\t<SignInContainer>\n\t\t\t<SignInTitle>I already have an account</SignInTitle>\n\t\t\t<span>Sign in with your email and password</span>\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<ButtonsBarContainer>\n\t\t\t\t\t<CustomButton type=\"submit\" value=\"Submit Form\">\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</CustomButton>\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t>\n\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</ButtonsBarContainer>\n\t\t\t</form>\n\t\t</SignInContainer>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}