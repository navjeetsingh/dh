{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollections() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\n}\nexport function* shopSagas() {\n  yield all([call(onFetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollections","collectionRef","collection","snapshot","get","collectionsMap","error","message","onFetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAOA,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAChCO,+BADgC,EAEhCI,QAFgC,CAAjC;AAIA,UAAMV,GAAG,CAACE,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACA,GARD,CAQE,OAAOC,KAAP,EAAc;AACf,UAAMb,GAAG,CAACG,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,uBAAV,GAAoC;AAC1C,QAAMjB,UAAU,CAACM,eAAe,CAACY,uBAAjB,EAA0CT,gBAA1C,CAAhB;AACA;AAED,OAAO,UAAUU,SAAV,GAAqB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,uBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport {\n\tfetchCollectionsSuccess,\n\tfetchCollectionsFailure,\n} from './shop.actions';\nimport ShopActionTypes from './shop.types';\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\n\n\nexport function* fetchCollections() {\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(\n\t\t\tconvertCollectionsSnapshotToMap,\n\t\t\tsnapshot\n\t\t);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch (error) {\n\t\tyield put(fetchCollectionsFailure(error.message));\n\t}\n}\n\nexport function* onFetchCollectionsStart() {\n\tyield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\n}\n\nexport function* shopSagas(){\n\tyield all([call(onFetchCollectionsStart)])\n}\n"]},"metadata":{},"sourceType":"module"}