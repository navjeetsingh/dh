{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\n\nclass ShopPage extends Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js"],"names":["React","Component","Route","connect","CollectionsOverview","WithSpinner","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollections","ShopPage","constructor","props","unsubscribeFromSnapshot","state","loading","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,WAAP,MAAwB,uDAAxB;AACA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,SACCC,SADD,EAECC,8BAFD,QAGO,kCAHP;AAIA,SAASC,iBAAT,QAAkC,kCAAlC;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAChCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAMnBC,uBANmB,GAMO,IANP;AAElB,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AADG,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEP,MAAAA;AAAF,QAAwB,KAAKG,KAAnC;AACA,UAAMK,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKL,uBAAL,GAA+BI,aAAa,CAACE,UAAd,CAC9B,MAAOC,QAAP,IAAoB;AACnB,YAAMC,aAAa,GAAGb,8BAA8B,CAACY,QAAD,CAApD;AACAX,MAAAA,iBAAiB,CAACY,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAL6B,CAA/B;AAOA;;AACDQ,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKZ,KAAvB;AACA,wBACC,uDACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAErB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBADrB;AAEC,MAAA,SAAS,EAAEnB,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AASA;;AA/B+B;;AAkCjC,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACzClB,EAAAA,iBAAiB,EAAGmB,cAAD,IAClBD,QAAQ,CAAClB,iBAAiB,CAACmB,cAAD,CAAlB;AAFgC,CAAf,CAA3B;;AAKA,eAAezB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport {\n\tfirestore,\n\tconvertCollectionSnapshotToMap,\n} from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\n\nclass ShopPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t};\n\t}\n\tunsubscribeFromSnapshot = null;\n\tcomponentDidMount() {\n\t\tconst { updateCollections } = this.props;\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n\t\t\tasync (snapshot) => {\n\t\t\t\tconst collectionMap = convertCollectionSnapshotToMap(snapshot);\n\t\t\t\tupdateCollections(collectionMap);\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t}\n\t\t);\n\t}\n\trender() {\n\t\tconst { match } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\tcomponent={CollectionPage}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateCollections: (collectionsMap) =>\n\t\tdispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}