{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverview.container.js';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions.js';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors.js';\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js"],"names":["React","Component","Route","createStructuredSelector","connect","CollectionsOverviewContainer","WithSpinner","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionsLoaded","CollectionsPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,4BAAP,MAAyC,uEAAzC;AACA,OAAOC,WAAP,MAAwB,uDAAxB;AACA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,SAASC,0BAAT,QAA2C,kCAA3C;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AAEA,MAAMC,0BAA0B,GAAGJ,WAAW,CAACC,cAAD,CAA9C;;AAEA,MAAMI,QAAN,SAAuBV,SAAvB,CAAiC;AAChCW,EAAAA,iBAAiB,GAAG;AACjB,UAAM;AAAEJ,MAAAA;AAAF,QAAiC,KAAKK,KAA5C;AACAL,IAAAA,0BAA0B;AAC5B;;AAEDM,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgC,KAAKH,KAA3C;AACA,wBACC,uDACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFrB;AAGC,MAAA,SAAS,EAAEZ,4BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAMC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACE,IAAK,gBADrB;AAEC,MAAA,MAAM,EAAGJ,KAAD,iBACP,oBAAC,0BAAD;AACC,QAAA,SAAS,EAAE,CAACG;AADb,SAEKH,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAkBA;;AA1B+B;;AA6BjC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAChDa,EAAAA,kBAAkB,EAAEP;AAD4B,CAAD,CAAhD;;AAIA,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACzCZ,EAAAA,0BAA0B,EAAE,MAAMY,QAAQ,CAACZ,0BAA0B,EAA3B;AADD,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverview.container.js';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions.js';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors.js';\n\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n\tcomponentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n\t}\n\t\n\trender() {\n\t\tconst { match, isCollectionLoaded } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\tcomponent={CollectionsOverviewContainer}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<CollectionsPageWithSpinner\n\t\t\t\t\t\t\tisLoading={!isCollectionLoaded}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}