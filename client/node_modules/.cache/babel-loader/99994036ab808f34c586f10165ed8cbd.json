{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions.js';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors.js';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js"],"names":["React","Component","Route","createStructuredSelector","connect","CollectionsOverview","WithSpinner","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,WAAP,MAAwB,uDAAxB;AACA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,SAASC,0BAAT,QAA2C,kCAA3C;AACA,SAASC,0BAAT,QAA2C,oCAA3C;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMM,0BAA0B,GAAGL,WAAW,CAACC,cAAD,CAA9C;;AAEA,MAAMK,QAAN,SAAuBX,SAAvB,CAAiC;AAChCY,EAAAA,iBAAiB,GAAG;AACjB,UAAM;AAAEL,MAAAA;AAAF,QAAiC,KAAKM,KAA5C;AAEAN,IAAAA,0BAA0B;AAC3B;;AACFO,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,wBACC,uDACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFrB;AAGC,MAAA,SAAS,EAAEb,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAMC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACE,IAAK,gBADrB;AAEC,MAAA,SAAS,EAAEX,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAaA;;AArB+B;;AAwBjC,MAAMY,eAAe,GAAGhB,wBAAwB,CAAC;AAChDc,EAAAA,oBAAoB,EAAER;AAD0B,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACzCb,EAAAA,0BAA0B,EAAE,MAAMa,QAAQ,CAACb,0BAA0B,EAA3B;AADD,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCR,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions.js';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors.js';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n\tcomponentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n\n    fetchCollectionsStartAsync();\n  }\n\trender() {\n\t\tconst { match, isCollectionFetching } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\tcomponent={CollectionsOverview}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\tcomponent={CollectionPage}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionFetching: selectIsCollectionFetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}