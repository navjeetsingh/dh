{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/components/SignIn/SignIn.component.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './SignIn.styles.js';\nimport FormInput from '../FormInput/FormInput.component.js';\nimport CustomButton from '../CustomButton/CustomButton.component.js';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      label: \"Password\",\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      value: \"Submit Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart(email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/components/SignIn/SignIn.component.js"],"names":["React","Component","connect","SignInContainer","SignInTitle","ButtonsBarContainer","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","constructor","props","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","state","email","password","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tSignInContainer,\n\tSignInTitle,\n\tButtonsBarContainer,\n} from './SignIn.styles.js';\nimport FormInput from '../FormInput/FormInput.component.js';\nimport CustomButton from '../CustomButton/CustomButton.component.js';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t};\n\t}\n\n\thandleChange = (event) => {\n\t\tconst { value, name } = event.target;\n\t\tthis.setState({ [name]: value });\n\t};\n\n\thandleSubmit = async (event) => {\n\t\tevent.preventDefault();\t\n\t};\n\n\trender() {\n\t\tconst { email, password } = this.state;\n\t\tconst { googleSignInStart } = this.props;\n\t\treturn (\n\t\t\t<SignInContainer>\n\t\t\t\t<SignInTitle>I already have an account</SignInTitle>\n\t\t\t\t<span>Sign in with your email and password</span>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonsBarContainer>\n\t\t\t\t\t\t<CustomButton type=\"submit\" value=\"Submit Form\">\n\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t\t<CustomButton\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</ButtonsBarContainer>\n\t\t\t\t</form>\n\t\t\t</SignInContainer>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart(email,password))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}