{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js"],"names":["React","Component","Route","connect","CollectionsOverview","WithSpinner","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","constructor","props","unsubscribeFromSnapshot","state","loading","componentDidMount","collectionRef","collection","get","then","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,WAAP,MAAwB,uDAAxB;AACA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,SACCC,SADD,EAECC,8BAFD,QAGO,kCAHP;AAIA,SAASC,iBAAT,QAAkC,kCAAlC;AAEA,MAAMC,8BAA8B,GAAGL,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMO,0BAA0B,GAAGN,WAAW,CAACC,cAAD,CAA9C;;AAEA,MAAMM,QAAN,SAAuBX,SAAvB,CAAiC;AAChCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAMnBC,uBANmB,GAMO,IANP;AAElB,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AADG,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKK,KAAnC;AACA,UAAMK,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACtC,YAAMC,aAAa,GAAGhB,8BAA8B,CAACe,QAAD,CAApD;AACAd,MAAAA,iBAAiB,CAACe,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAJD;AAKA;;AACDS,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKb,KAAvB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACC,uDACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,EAFrB;AAGC,MAAA,MAAM,EAAGd,KAAD,iBACP,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAwDH,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAQC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,gBADrB;AAEC,MAAA,MAAM,EAAGd,KAAD,iBACP,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEG;AAAvC,SAAoDH,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,CADD;AAiBA;;AAtC+B;;AAyCjC,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACzCrB,EAAAA,iBAAiB,EAAGsB,cAAD,IAClBD,QAAQ,CAACrB,iBAAiB,CAACsB,cAAD,CAAlB;AAFgC,CAAf,CAA3B;;AAKA,eAAe5B,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner.component.js';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport {\n\tfirestore,\n\tconvertCollectionSnapshotToMap,\n} from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t};\n\t}\n\tunsubscribeFromSnapshot = null;\n\tcomponentDidMount() {\n\t\tconst { updateCollections } = this.props;\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tcollectionRef.get().then((snapshot) => {\n\t\t\tconst collectionMap = convertCollectionSnapshotToMap(snapshot);\n\t\t\tupdateCollections(collectionMap);\n\t\t\tthis.setState({ loading: false });\n\t\t});\n\t}\n\trender() {\n\t\tconst { match } = this.props;\n\t\tconst { loading } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<CollectionsPageWithSpinner isLoading={loading} {...props} />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateCollections: (collectionsMap) =>\n\t\tdispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}