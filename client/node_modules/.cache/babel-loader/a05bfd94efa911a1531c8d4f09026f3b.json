{"ast":null,"code":"var _jsxFileName = \"/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      console.log(collectionMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect()(ShopPage);","map":{"version":3,"sources":["/Users/navjeetsingh/Library/Mobile Documents/com~apple~CloudDocs/Sites/complete-react-developer-2020/dh/src/pages/ShopPage/ShopPage.component.js"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollections","ShopPage","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","console","log","render","match","props","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,kCAA1D;AACA,SAAQC,iBAAR,QAAgC,kCAAhC;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCS,uBADgC,GACN,IADM;AAAA;;AAEhCC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAkB;AACzE,YAAMC,aAAa,GAAGT,8BAA8B,CAACQ,QAAD,CAApD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,KAH8B,CAA/B;AAIA;;AACDG,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACC,uDACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEgB,KAAK,CAACE,IAAK,gBADrB;AAEC,MAAA,SAAS,EAAEjB,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AASA;;AArB+B;;AAwBjC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACvChB,EAAAA,iBAAiB,EAAEiB,cAAc,IAAID,QAAQ,CAAChB,iBAAiB,CAACiB,cAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAetB,OAAO,GAAGM,QAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview.component';\nimport CollectionPage from '../../pages/CollectionPage/CollectionPage.component.js';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport {updateCollections} from '../../redux/shop/shop.actions.js';\n\nclass ShopPage extends Component {\n\tunsubscribeFromSnapshot = null;\n\tcomponentDidMount() {\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot)=>{\n\t\t\tconst collectionMap = convertCollectionSnapshotToMap(snapshot)\n\t\t\tconsole.log(collectionMap)\n\t\t})\n\t}\n\trender() {\n\t\tconst { match } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\tcomponent={CollectionPage}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect()(ShopPage);\n"]},"metadata":{},"sourceType":"module"}